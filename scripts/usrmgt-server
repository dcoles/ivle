#!/usr/bin/python

import sys

import common.chat
import common.makeuser

# usage:
#   usrmgt-server <port> <magic>

# User management operations:
#   - Create local user
#   - [Re]Create jail for a user
#       - Create a svn repository for a user
#           - create repository
#           - svn config
#           - svn auth
#       - Checkout repository as home directory
#       - /etc/passwd entry
#   - Disable a user's account
#   - Enable a user's account
#   - Remove a user
#   - Rebuild svn config
#   - Rebuild svn auth file
#   - Rebuild passwd + push to nodes.


def create_user(props):
    """Create the database record for the given user.
       Expected properties:
        username    - used as a unix login name and svn repository name.
                      STRING REQUIRED 
        uid         - the unix uid under which execution will take place
                      on the behalf of the user. Don't use 0! If not specified
                      or None, one will be allocated from the configured
                      numeric range.
                      INT OPTIONAL
        password    - the clear-text password for the user. If this property is
                      absent or None, this is an indication that external
                      authentication should be used (i.e. LDAP).
                      STRING OPTIONAL
        nick        - the display name to use.
                      STRING REQUIRED
        fullname    - The name of the user for results and/or other official
                      purposes.
                      STRING REQUIRED
        rolenm      - The user's role. Must be one of "anyone", "student",
                      "tutor", "lecturer", "admin".
                      STRING/ENUM REQUIRED
        studentid   - If supplied and not None, the student id of the user for
                      results and/or other official purposes.
                      STRING OPTIONAL
       Return Value: the uid associated with the user. INT
    """

    if 'uid' not in props:
        raise Exception, "No algorithm for creating uids yet!"
        # uid = invent-uid
        # props['uid'] = uid

    common.makeuser.make_user_db(props['username'], props['uid'],
                                 props['password'], props['nick'],
                                 props['fullname'], props['rolenm'],
                                 props['studentid'])

    return props['uid']

def create_jail(props):
    """Create the jail for a user.
       Expected properties:
        username    - the username for the jail
                      STRING REQUIRED
        uid         - the unix uid to make the owner of the home directory
                      in the jail.
                      INT REQUIRED
        gid         - the unix group id to make the group of the home directory
                      in the jail. If not supplied (or None), then the uid is
                      also used.
                      INT OPTIONAL
    """
    common.makeuser.make_jail(props['username'], props['uid'])
    return None

actions = {
        'create-user':create_user,
        'create-jail':create_jail
    }

def dispatch(props):
    action = props.keys()[0]
    return actions[action](props[action])

if __name__ == "__main__":
    port = int(sys.argv[1])
    magic = sys.argv[2]

    common.chat.start_server(port, magic, False, dispatch)
