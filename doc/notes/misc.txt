IVLE Design - Misc
==================

    Author: Steven Bird, Matt Giuca
    Date: 4/12-7/12/2007

Tutorial page
-------------

Tutorials need to be able to include and submit not just Python code, but any
arbitrary HTML form (such as option buttons to answer multiple choice
questions, or non-EditArea text fields).

Specification
-------------

* includes marking scheme

Submission
----------

* student: commits against a tag specific to a project
* we do an svn rm of whatever is there; then an svn copy
* we do a checkout of this tag on the submission deadline
* this creates a working copy that the individual student and the
    staff members can see
* student can navigate to their submission to verify it

Verification
------------

* to permit automated verification of an interactive submission, need
    to design the project specification so that we can make assumptions
    about field names, so we can test the submission using a GET request
* response could be HTML; easy to capture
* response could be a redirect to an image (won't follow img tags)
* unresolved issue re printing
* public tests that everyone can see; additional tests only seen by assessors

Workflow for assessor
---------------------

* sees a page of links, each for some test case
* sees peer reviews of this submission to help find issues
* sees peer reviews by this student which are assessed
* marking scheme and comment boxes, and mark boxes available

Peer review
-----------

* just another marking scheme (less detailed, more comment field-based)
* possibility of peer review in a multi-stage project; first stage can
    be assessed and fully exposed to peer reviewer, later stages can use
    anyone's implementation of the earlier stages

Tutorial exercises
------------------

* permit comment thread on each exercise
* other students permitted to score comments for usefulness

Relationship between verification and checking tutorial exercises:

* want to categorize mistakes and give hints
