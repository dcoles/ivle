#!/usr/bin/python

# IVLE - Informatics Virtual Learning Environment
# Copyright (C) 2008-2009 The University of Melbourne
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Author: William Grant

'''
A script for viewing a Subversion log. It is intended to be run via trampoline
by ivle.webapp.filesystem.svnlog.SubversionLogView.
'''

import os
import sys
import locale

import cjson
import pysvn

import ivle.conf
import ivle.svn

# Set locale to UTF-8
locale.setlocale(locale.LC_CTYPE, "en_US.UTF-8")

try:
    client = ivle.svn.create_auth_svn_client(username=ivle.conf.login,
                                             password=ivle.conf.svn_pass)
    client.exception_style = 1
    logs = client.log(os.path.join('/home', sys.argv[1].decode('utf-8')),
                      discover_changed_paths=True)
    print cjson.encode({'logs': [{'revno': log.revision.number,
                                  'author': log.author.decode('utf-8'),
                                  'message': log.message.decode('utf-8'),
                                  'date': log.date,
                                  'paths': [(p.path.decode('utf-8'), p.action)
                                            for p in log.changed_paths]}
                                 for log in logs]})
except pysvn.ClientError, e:
    error = e[0]

    try:
        code = e[1][0][1]
        # See subversion/include/svn_error_codes.h.
        # 150000: ERR_ENTRY_NOT_FOUND
        # 155007: WC_NOT_DIRECTORY.
        # 160006: FS_NO_SUCH_REVISION
        # 160013: FS_NOT_FOUND
        # 200005: UNVERSIONED_RESOURCE
        if code in (150000, 155007, 160006, 160013, 200005):
            error = 'notfound'
        else:
            error = '%s (code %d)' % (error, code)
    except IndexError:
        pass

    print cjson.encode({'error': error})
