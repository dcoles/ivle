#!/usr/bin/python

# IVLE - Informatics Virtual Learning Environment
# Copyright (C) 2007-2008 The University of Melbourne
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Author: David Coles, Will Grant

'''
A script for generating a Subversion diff. It is intended to be run via
trampoline by ivle.webapp.filesystem.diff.DiffView.
'''

import os
import sys

import cjson
import pysvn

import ivle.svn


# Default revisions
revs = [pysvn.Revision(x) for x in [pysvn.opt_revision_kind.base,
                                    pysvn.opt_revision_kind.working]]

# Override revisions from argv.
for ri in range(len(sys.argv[2:4])):
    r = ivle.svn.revision_from_string(sys.argv[2 + ri])
    if r is not None:
        revs[ri] = r

# Attempt to get the diff for these revisons
try:
    svnclient = pysvn.Client()
    svnclient.exception_style = 1
    diff = svnclient.diff
    diff_text = diff( '/tmp/svndiff',
        os.path.join('/home', sys.argv[1]),
        revision1=revs[0],
        revision2=revs[1]
    )
    print cjson.encode({'diff': diff_text})
except pysvn.ClientError, e:
    error = e[0]

    try:
        code = e[1][0][1]
        # See subversion/include/svn_error_codes.h.
        # 155007: WC_NOT_DIRECTORY.
        # 160013: FS_NOT_FOUND
        # 200005: UNVERSIONED_RESOURCE
        if code in (155007, 160013, 200005):
            error = 'notfound'
        else:
            error = '%s (code %d)' % (error, code) 
    except IndexError:
        pass

    print cjson.encode({'error': error})
