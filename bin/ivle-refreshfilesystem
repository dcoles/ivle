#!/usr/bin/env python
# IVLE - Informatics Virtual Learning Environment
# Copyright (C) 2007-2009 The University of Melbourne
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

"""Refresh parts of the filesystem that are generated from the database.

In particular:
 - missing user jails are created
 - missing user and group Subversion repositories are created
 - the Subversion password file is updated
 - the Subversion authorisation files are rewritten
"""

import os
import sys

from ivle.config import Config
from ivle.database import get_store, ProjectGroup, User
import ivle.makeuser
# Python 2.5's shutil.rmtree follows symlinks!
from ivle.util import safe_rmtree

config = Config()
store = get_store(config)

active_users = store.find(User, state=u'enabled').order_by(User.login)

print >>sys.stderr, "Refreshing active user jails..."
for user in active_users:
    ivle.makeuser.make_jail(user, config)

print >>sys.stderr, "Purging extra user jails..."
present_jails = set(
    login for login in os.listdir(config['paths']['jails']['src'])
    if not (login.startswith('__') and login.endswith('__')))

for jail in present_jails - set(user.login for user in active_users):
    print ' - %s' % jail
    safe_rmtree(os.path.join(config['paths']['jails']['src'], jail))

repo_root = config['paths']['svn']['repo_path']

print >>sys.stderr, "Creating missing Subversion user respositories..."
present_user_repos= set(
    login for login in os.listdir(os.path.join(repo_root, 'users')))

for repo in set(user.login for user in active_users) - present_user_repos:
    print ' - %s' % repo
    ivle.makeuser.make_svn_repo(
        os.path.join(repo_root, 'users', repo), throw_on_error=True)

print >>sys.stderr, "Purging extra Subversion user respositories..."
for repo in present_user_repos - set(user.login for user in active_users):
    print ' - %s' % repo
    safe_rmtree(os.path.join(repo_root, 'users', repo))


print >>sys.stderr, "Creating missing Subversion group respositories..."
present_group_repos = set(
    group for group in os.listdir(os.path.join(repo_root, 'groups')))

active_group_identifiers = set("_".join(
    [group.project_set.offering.subject.short_name,
     group.project_set.offering.semester.year,
     group.project_set.offering.semester.semester,
     group.name]) for group in store.find(ProjectGroup))

for repo in active_group_identifiers - present_group_repos:
    print ' - %s' % repo
    ivle.makeuser.make_svn_repo(
        os.path.join(repo_root, 'groups', repo), throw_on_error=True)

print >>sys.stderr, "Purging extra Subversion user respositories..."
for repo in present_group_repos - active_group_identifiers:
    print ' - %s' % repo
    safe_rmtree(os.path.join(repo_root, 'groups', repo))


print >>sys.stderr, "Rebuilding Subversion user configuration..."
ivle.makeuser.rebuild_svn_config(store, config)
print >>sys.stderr, "Rebuilding Subversion group configuration..."
ivle.makeuser.rebuild_svn_group_config(store, config)


