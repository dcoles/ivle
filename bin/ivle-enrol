#!/usr/bin/env python
# IVLE - Informatics Virtual Learning Environment
# Copyright (C) 2007-2008 The University of Melbourne
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Program: enrol
# Author:  William Grant
# Date:    08/08/2008

# Script to enrol a user in an offering.

import os
import sys

from ivle.database import get_store, Subject, Semester, Offering, User

def die(error):
    print >> sys.stderr, '%s: %s' % (os.path.basename(sys.argv[0]), error)
    sys.exit(1)

if len(sys.argv) not in (5, 6):
    print >> sys.stderr, '''usage: %s <login> <subjectcode> <year> <semester> [role]

'role' should be one of student (the default), tutor or lecturer.
If an enrolment already exists, it will be reactivated and its role set.''' \
                         % os.path.basename(sys.argv[0])
    sys.exit()

store = get_store()

user = User.get_by_login(store, sys.argv[1])
if user is None:
    die("user not found")

offering = store.find(Offering,
                    Subject.code == unicode(sys.argv[2]),
                    Semester.year == unicode(sys.argv[3]),
                    Semester.semester == unicode(sys.argv[4]),
                    Offering.subject_id == Subject.id,
                    Offering.semester_id == Semester.id).one()
if not offering:
    die("subject offering not found")

role = unicode(sys.argv[5]) if len(sys.argv) == 6 else u'student'

try:
    offering.enrol(user, role)
except AlreadyEnrolledError:
    die("already enrolled")

store.commit()
